#!/bin/sh
 
### BEGIN INIT INFO
# Provides: lapp
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: bb-Lamp control app, may be configured from bblamp-server
# Description: 
### END INIT INFO

# inspired from:
# http://blog.scphillips.com/2013/07/getting-a-python-script-to-run-in-the-background-as-a-service-on-boot/

DAEMON_NAME=lapp
DIR=/home/pi/bblamp
STDOUT=$DIR/${DAEMON_NAME}.stdout
STDERR=$DIR/${DAEMON_NAME}.stderr
DAEMON_CMD=$DIR/lapp/lapp_running.py
 
# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=pi
 
# The process ID of the script when it runs is stored here:
PIDFILE=$DIR/${DAEMON_NAME}.pid

# var env
export PYTHONPATH=$PYTHONPATH:./

. /lib/lsb/init-functions
 
do_start () {
	log_daemon_msg "Starting system $DAEMON_NAME daemon"
	echo 
	echo "start-stop-daemon --start --background --pidfile $PIDFILE --exec "/usr/bin/python" --user ${DAEMON_USER} --chdir $DIR  -- ${DAEMON_CMD} > $STDOUT 2> $STDERR"
	log_end_msg $?
}
do_stop () {
	log_daemon_msg "Stopping system ${DAEMON_NAME} daemon"
	start-stop-daemon --stop --pidfile $PIDFILE --retry 10
	log_end_msg $?
	rm $PIDFILE
}
 
case "$1" in
	 
	start|stop)
		do_${1}
	;;
	 
	restart|reload|force-reload)
		do_stop
		do_start
	;;
	 
	status)
		status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
		;;
	
	*)
		echo "Usage: /etc/init.d/$DEAMON_NAME {start|stop|restart|status}"
		exit 1
	;;
	 
esac
exit 0
